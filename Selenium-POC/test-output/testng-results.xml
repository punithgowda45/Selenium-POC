<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="62979" started-at="2022-01-23T08:54:29Z" finished-at="2022-01-23T08:55:32Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="62979" started-at="2022-01-23T08:54:29Z" finished-at="2022-01-23T08:55:32Z">
      <class name="scripts.Validlogin">
        <test-method status="PASS" signature="openapp()[pri:0, instance:scripts.Validlogin@31c88ec8]" name="openapp" is-config="true" duration-ms="13340" started-at="2022-01-23T08:54:29Z" finished-at="2022-01-23T08:54:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method status="PASS" signature="testValidlogin()[pri:1, instance:scripts.Validlogin@31c88ec8]" name="testValidlogin" duration-ms="9370" started-at="2022-01-23T08:54:42Z" finished-at="2022-01-23T08:54:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidlogin -->
        <test-method status="PASS" signature="closeapp()[pri:0, instance:scripts.Validlogin@31c88ec8]" name="closeapp" is-config="true" duration-ms="683" started-at="2022-01-23T08:54:51Z" finished-at="2022-01-23T08:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeapp -->
      </class> <!-- scripts.Validlogin -->
      <class name="scripts.Invalidlogin">
        <test-method status="PASS" signature="openapp()[pri:0, instance:scripts.Invalidlogin@3daa422a]" name="openapp" is-config="true" duration-ms="12394" started-at="2022-01-23T08:54:52Z" finished-at="2022-01-23T08:55:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method status="PASS" signature="testInvalidlogin()[pri:2, instance:scripts.Invalidlogin@3daa422a]" name="testInvalidlogin" duration-ms="2373" started-at="2022-01-23T08:55:04Z" finished-at="2022-01-23T08:55:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidlogin -->
        <test-method status="PASS" signature="closeapp()[pri:0, instance:scripts.Invalidlogin@3daa422a]" name="closeapp" is-config="true" duration-ms="671" started-at="2022-01-23T08:55:07Z" finished-at="2022-01-23T08:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeapp -->
      </class> <!-- scripts.Invalidlogin -->
      <class name="scripts.VerifyHomePage">
        <test-method status="PASS" signature="openapp()[pri:0, instance:scripts.VerifyHomePage@1cbbffcd]" name="openapp" is-config="true" duration-ms="12386" started-at="2022-01-23T08:55:08Z" finished-at="2022-01-23T08:55:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapp -->
        <test-method status="FAIL" signature="testVerifyhomepage()[pri:3, instance:scripts.VerifyHomePage@1cbbffcd]" name="testVerifyhomepage" duration-ms="10431" started-at="2022-01-23T08:55:20Z" finished-at="2022-01-23T08:55:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at scripts.VerifyHomePage.testVerifyhomepage(VerifyHomePage.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyhomepage -->
        <test-method status="PASS" signature="closeapp()[pri:0, instance:scripts.VerifyHomePage@1cbbffcd]" name="closeapp" is-config="true" duration-ms="1256" started-at="2022-01-23T08:55:30Z" finished-at="2022-01-23T08:55:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeapp -->
      </class> <!-- scripts.VerifyHomePage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
